Errors: 

    Compile Time Errors: Violations of the language found by the compiler.
        
        Syntax Errors
        Type Errors
    
    Link Time Errors: Errors found by the linked when trying to combine object files into an executable.

    Run-Time Errors: Errors found by checks in a running program.

        Errors detected by hardware/OS
        Errors detected by libraries
        Errors detected by user code

    Logic Errors: Errors found by the programmer looking for the causes of erroneous results.

Program Error Default Assumptions:

    1. Should produce the desired results for all legal inputs.
    2. Should give reasonable error messages for all illegal inputs.
    3. Need not worry about hardware bugs and misbehavior (out of our scope).
    4. Need not worry about system software bus and misbehvaior (out of our scope).
    5. Is allowed to terminate after finding an error.

Cause of Errors:

    Poor specifications of behavior - describe your program before.
    Incomplete programs - look at all cases.
    Unexpected arguments passed.
    Unexpected program inputs.
    Logical errors!

Exceptions split responsiblitity. The called function reports the error and the calling function handles it.
Instead of the called function return a value, it throws an exception. 
If that exception is not caught by a try-catch block, the program terminates.

collections of data are often called "containers" e.g. vectors

Error handling limimtations:

    Can't modify the library.
    Performance - costs more than worth to check.

out_of_range exception is often thrown.

<> are called template arguments.

Use preconditions and postconditions to help check program for bugs.

Review Answers:
 

